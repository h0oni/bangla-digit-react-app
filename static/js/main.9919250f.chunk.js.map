{"version":3,"sources":["styles.js","App.js","index.js"],"names":["makeStyles","root","display","justifyContent","alignItems","flexDirection","height","background","canvasContainer","border","margin","borderRadius","boxShadow","overflow","clearButton","width","text","fontSize","predText","headText","App","classes","useStyles","canvasRef","useRef","useState","hello","pred","setPred","fetchpred","image","a","settings","method","headers","body","JSON","stringify","img","fetch","fetchResponse","json","className","hideGrid","hideInterface","canvasWidth","ref","motion","button","whileHover","scale","transition","duration","onClick","current","clear","childNodes","toDataURL","ReactDOM","render","document","getElementById"],"mappings":"oLAEeA,eAAW,iBAAO,CAC7BC,KAAM,CACFC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,cAAe,SACfC,OAAQ,mBACRC,WAAY,aAGhBC,gBAAiB,CACbC,OAAQ,sBACRC,OAAQ,MACRC,aAAc,OACdC,UAAW,wBACXC,SAAU,UAEdC,YAAa,CACTC,MAAO,kBACPT,OAAQ,OACRI,OAAO,MACPH,WAAW,WACXE,OAAQ,kBACRE,aAAc,QAElBK,KAAK,CACDC,SAAS,IAEbC,SAAS,CACLD,SAAS,GACTf,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBO,OAAO,QAEXS,SAAS,CACLF,SAAS,GACTf,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBO,OAAO,Y,uBCmCAU,EAxEH,WACR,IAAMC,EAAUC,IACVC,EAAWC,iBAAO,MACxB,EAAwBC,mBAAS,CAACC,MAAM,OAAxC,mBAAOC,EAAP,KAAaC,EAAb,KAUA,IAAMC,EAAS,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACRC,EAAW,CACbC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEC,IAAKR,KAJlB,kBAQkBS,MAAM,oDAAqDP,GAR7E,cAQJQ,EARI,gBASSA,EAAcC,OATvB,OASJd,EATI,OAUVC,EAAQD,GAVE,2IAAH,sDAiBf,OACI,sBAAKe,UAAWrB,EAAQpB,KAAxB,UACI,qBAAKyC,UAAWrB,EAAQF,SAAxB,sCADJ,qBAGI,qBAAKuB,UAAWrB,EAAQb,gBAAxB,SACI,cAAC,IAAD,CACAmC,UAAU,EACVC,eAAe,EACfC,YAAa,kBACbC,IAAOvB,MAGP,gCACI,cAACwB,EAAA,EAAOC,OAAR,CACIC,WAAY,CACZC,MAAO,KACPC,WAAY,CAAEC,SAAU,MAExBV,UAAWrB,EAAQP,YACnBuC,QAxCpB,WACI9B,EAAU+B,QAAQC,SAiCN,SAOI,qBAAKb,UAAWrB,EAAQL,KAAxB,qBAEJ,cAAC+B,EAAA,EAAOC,OAAR,CACIC,WAAY,CACZC,MAAO,KACPC,WAAY,CAAEC,SAAU,MAExBV,UAAWrB,EAAQP,YACnBuC,QAtDpB,WACI,IAAMvB,EAAQP,EAAU+B,QAAQ9C,gBAAgBgD,WAAW,GAAGC,YAC9D5B,EAAUC,IA8CE,SAOI,qBAAKY,UAAWrB,EAAQL,KAAxB,8BAEJ,sBAAK0B,UAAWrB,EAAQH,SAAxB,kCAAwDS,EAAKD,YAGjE,6KChEhBgC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9919250f.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles(() => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        height: 'min(952px,100vh)',\r\n        background: 'slategray',\r\n        // backgroundImage: 'url(https://th.bing.com/th/id/OIP.KBslR72zDojAnucztO7NxAHaEO?pid=ImgDet&rs=1)'\r\n    },\r\n    canvasContainer: {\r\n        border: '2px solid slategray',\r\n        margin: '3vh',\r\n        borderRadius: '15px',\r\n        boxShadow: '0px 0px 5px 5px black',\r\n        overflow: 'hidden',\r\n    },\r\n    clearButton: {\r\n        width: 'min(200px,45vw)',\r\n        height: '40px',\r\n        margin:'5px',\r\n        background:'darkgray',\r\n        border: '2px solid black',\r\n        borderRadius: '25px',\r\n    },\r\n    text:{\r\n        fontSize:18,\r\n    },\r\n    predText:{\r\n        fontSize:20,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        margin:'10px'\r\n    },\r\n    headText:{\r\n        fontSize:40,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        margin:'10px',\r\n    }\r\n}));","import React, { useRef, useState } from 'react'\r\nimport useStyles from './styles'\r\nimport CanvasDraw from \"react-canvas-draw\";\r\nimport { motion } from \"framer-motion\"\r\n\r\nconst App = () => {\r\n    const classes = useStyles();\r\n    const canvasRef= useRef(null)\r\n    const [pred, setPred] = useState({hello:'--'})\r\n    function predictionButton() {\r\n        const image = canvasRef.current.canvasContainer.childNodes[1].toDataURL()\r\n        fetchpred(image)\r\n    }\r\n\r\n    function clearButton() {\r\n        canvasRef.current.clear()\r\n    }\r\n\r\n    const fetchpred = async (image) => {\r\n        const settings = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ img: image })\r\n        };\r\n        try {\r\n            // const fetchResponse = await fetch('http://127.0.0.1:8000/predict/', settings);\r\n            const fetchResponse = await fetch('https://bangladigitfastapi.herokuapp.com/predict/', settings);\r\n            const pred = await fetchResponse.json();\r\n            setPred(pred)\r\n        } catch (e) {\r\n            return e;\r\n        }    \r\n    \r\n    }\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.headText}>Bangla Handwritten Digit</div>\r\n            Draw a Digit below\r\n            <div className={classes.canvasContainer}>\r\n                <CanvasDraw \r\n                hideGrid={true} \r\n                hideInterface={true} \r\n                canvasWidth= 'min(400px,90vw)'\r\n                ref = {canvasRef}\r\n                />\r\n                </div>\r\n                <div>\r\n                    <motion.button\r\n                        whileHover={{\r\n                        scale: 1.03,\r\n                        transition: { duration: 0.05 },\r\n                        }} \r\n                        className={classes.clearButton} \r\n                        onClick={clearButton}>\r\n                        <div className={classes.text}>Clear</div>\r\n                    </motion.button>\r\n                    <motion.button\r\n                        whileHover={{\r\n                        scale: 1.03,\r\n                        transition: { duration: 0.05},\r\n                        }} \r\n                        className={classes.clearButton} \r\n                        onClick={predictionButton}>\r\n                        <div className={classes.text}>Get Prediction</div>\r\n                    </motion.button>\r\n                    <div className={classes.predText}>Most probable digit: {pred.hello}</div>\r\n                    \r\n                </div>\r\n                <div>As this is hosted with free heroku hosting the speed is very slow and also the model is a very small one. So the results might be bad.</div>\r\n                \r\n                \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}